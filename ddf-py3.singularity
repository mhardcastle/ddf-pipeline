Bootstrap: docker
From: debian:bullseye

%post -c /bin/bash
    CUSTOM_ENV=/.singularity.d/env/99-zz_custom_env.sh
    cat >$CUSTOM_ENV <<EOF
#!/bin/bash
PS1="\[\e[1;92m\][Singularity]\[\e[m\] \u@\h:\w\$ "
EOF
    chmod 755 $CUSTOM_ENV
    
%environment
   export SRC=/usr/local/src
   . $SRC/ddf-pipeline/init.sh
   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/:/usr/local/idg/lib/
   export SRC=/usr/local/src
   export RCLONE_CONFIG_DIR=/MACARON
   export DDF_PIPELINE_CATALOGS=/CATALOGS
   # Since DDF, kMS, and DynspecMS are dev branches we need to do this in order to get the right version number
   export KILLMS_DIR=$SRC
   export PYTHONPATH=$KILLMS_DIR:$PYTHONPATH
   export PYTHONPATH=$KILLMS_DIR/DDFacet:$PYTHONPATH
   export PYTHONPATH=$KILLMS_DIR/killMS:$PYTHONPATH
   export PYTHONPATH=$KILLMS_DIR/DynSpecMS:$PYTHONPATH
   export PYTHONPATH=$KILLMS_DIR/ms_info:$PYTHONPATH
   
   export PATH=$KILLMS_DIR/killMS/killMS:$PATH
   export PATH=$KILLMS_DIR/DDFacet/DDFacet:$PATH
   export PATH=$KILLMS_DIR/DDFacet/SkyModel:$PATH
   export PATH=$KILLMS_DIR/DynSpecMS:$PATH
   export PATH=$KILLMS_DIR/ms_info:$PATH
   export LD_LIBRARY_PATH=$KILLMS_DIR/DDFacet/DDFacet/cbuild:$LD_LIBRARY_PATH
   #   clear
   
   python /usr/bin/logo.py

   

%files
/home/$USER/.ssh /root/.ssh
/home/$USER/MACARON /MACARON
/home/$USER/CATALOGS /CATALOGS
/home/$USER/DDFSingularity/setDev.sh /usr/bin
/home/$USER/DDFSingularity/set-alias.sh /etc/profile.d/set-alias.sh
$PWD/logoSingularity.py /usr/bin/logo.py
$PWD/tier1-minimal.cfg /parset/tier1-minimal.cfg



%post
   export DEBIAN_FRONTEND=noninteractive
   export J=90
   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/:/usr/local/idg/lib/
   export SRC=/usr/local/src
   
   $SRC


  ##############################
  # Dev branches names 
  export BCH_DDF=master
  export BCH_KMS=master
  export BCH_DYN=SplitCatalog
  export BCH_DDFPIPE=master
  ##############################



   ls $SRC
  echo "Here we are installing software and other dependencies for the container!"
   apt-get update




apt-get install -y boxes
#apt install -y spyder

apt-get install -y openssh-client 
eval `ssh-agent -s`
ssh-add


apt-get install -y git mlocate


apt-get install -y emacs htop nano mc \
    git \
    wget \
    rsync \
    python3-pip \
    vim \
    libfftw3-dev \
    python3-numpy \
    libfreetype6-dev \
    libpng-dev \
    pkg-config \
    python3-dev \
    libboost-all-dev \
    libcfitsio-dev \
    wcslib-dev \
    libatlas-base-dev \
    liblapack-dev \
    python3-tk \
    libreadline6-dev \
    liblog4cplus-dev \
    libhdf5-dev \
    libncurses5-dev \
    libssl-dev \
    flex \
    bison \
    libbison-dev \
    python3-matplotlib \
    python3-numexpr \
    python3-astropy \
    python3-cpuinfo \
    python3-future \
    python3-lxml \
    python3-pandas \
    python3-psutil \
    python3-pyfftw python3-pymysql  \
    python3-requests  \
    python3-sshtunnel \
    python3-ruamel.yaml python3-ephem python3-photutils \
    python3-venv \
    bzip2 \
    ipython3 \
    libgsl-dev \
    libgtkmm-3.0-dev \
    libcfitsio-bin libxml2-dev libarmadillo-dev libsigc++-2.0-dev liblua5.3-dev libxslt-dev tcl zip libbz2-dev
    #saods9 
   update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1
   apt-get install -y casacore-dev casacore-data casacore-tools python3-casacore cmake curl
   apt-get install -y python3-astlib python3-ipdb python3-nose python3-metaconfig jq util-linux bsdmainutils evince ristretto imagemagick

   # Pip upgrade needed for killMS to work
   curl -sS https://bootstrap.pypa.io/get-pip.py | python

   pip install certifi


# fitsio
  cd $SRC
  git clone https://github.com/esheldon/fitsio.git
  cd fitsio
  python setup.py install


# ####################
apt-get install -y tar wget

apt-get install -y saods9

   
  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo
    pip install Pillow==9.3.0
  pip show numpy scipy
    pip install imageio==2.4.1
    pip install PyWavelets==1.1.1
    pip install tifffile==2019.7.26
    pip install scikit-image==0.19.3
    # tifffile, scikit-image, pywavelets, imageio affect numpy version
  pip show numpy scipy
  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo
  pip install reproject==0.10.0
  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo
   pip install aplpy==2.1.0
  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo
  
  pip install pybind11==2.9.2
   pip install --ignore-installed numpy==1.22.0 deap==1.4.1
   pip install dask codex_africanus==0.2.10 "ephem<=9.99" "Polygon3<=3.0.9.1" pyregion terminal "pyephem<=9.99" "ptyprocess<=0.7.0" timeout-decorator astroquery # pyfits
   pip install reproject
   pip install meqtrees-cattery==1.7.6
   pip install "regions<=0.5" "pywavelets<=1.1.1" "tqdm<=4.64.0" "configparser<=5.2.0"
  cd $SRC

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

  # PyBDSF
  pip install git+https://github.com/lofar-astron/PyBDSF.git

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

   # few more DDF dependencies
   pip install -U tables==3.7.0 prettytable==2.5.0 pylru==1.2.1 emcee astropy_healpix "sharedarray<=3.2.1" "Cython<=0.29.30"

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

  # tools
  cd $SRC
  git clone https://github.com/IanHeywood/ms_info.git

  
  

  # DDFacet
  #cd $SRC
  #git clone -b v0.8.0 https://github.com/saopicc/DDFacet.git
  #cd DDFacet
  #git checkout $BCH_DDF
  #cd ..
  ##pip install -e ./DDFacet
  #cd DDFacet
  #rm -rf DDFacet/cbuild
  #python setup.py clean
  #python setup.py build
  pip install DDFacet==0.8.0pl1

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

  
  # killMS
  cd $SRC
  #git clone git@github.com:cyriltasse/killMS.git
  git clone -b v3.2.0 https://github.com/saopicc/killMS.git
  pip install $SRC/killMS
  #cd killMS
  #mkdir cbuild
  #cd cbuild
  #cmake ..
  #make -j $J
  #make install
  #  python setup.py install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

  # Nenupy
  cd $SRC
  pip install --upgrade https://github.com/AlanLoh/nenupy/tarball/master

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


  # dynspecMS
  cd $SRC
  git clone https://github.com/cyriltasse/DynSpecMS.git
  cd DynSpecMS
  git checkout $BCH_DYN

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


# LSMTool 
   cd $SRC
   git clone https://github.com/darafferty/LSMTool.git
   cd LSMTool
   python setup.py install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo
  
   # LofarStMan
   cd $SRC
   git clone https://github.com/lofar-astron/LofarStMan.git
   cd LofarStMan
   mkdir cbuild; cd cbuild
   cmake ..
   make -j $J
   make install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

# LOFAR beam -- for DDF
   cd $SRC
   git clone -b v4.1.1 https://github.com/lofar-astron/LOFARBeam.git
   cd LOFARBeam
   mkdir build
   cd build
   cmake ..
   make -j $J
   make install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

cd /usr/local/lib/python3.9/dist-packages
   ln -s /usr/local/lib/python3.9/site-packages/lofar

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo

# dysco -- for DP3
   cd $SRC
   git clone https://github.com/aroffringa/dysco.git
   cd dysco
   git checkout 3fd7a5fd17f3d09db89ad7827c9bdc4febf66eff
   mkdir build
   cd build
   cmake ../
   make -j $J
   make install
   cp $SRC/dysco/build/decompress /usr/local/bin/decompress  # https://github.com/aroffringa/dysco/issues/12#issuecomment-773134161


  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


   # IDG -- for wsclean and DP3
   cd $SRC
   git clone -b 0.8 https://gitlab.com/astron-idg/idg.git
   cd idg && mkdir build && cd build
   #   cmake -DCMAKE_INSTALL_PREFIX=/usr/local/idg/ ..
   cmake ..
   make -j $J
   make install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


# aoflagger -- for DP3
   cd $SRC
   git clone -b v3.1.0 https://gitlab.com/aroffringa/aoflagger.git
   cd aoflagger
   mkdir build
   cd build
   cmake ..
   make -j $J
   make install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


   # Everybeam -- for DP3
   cd $SRC
   #git clone -b v0.1.3 https://git.astron.nl/RD/EveryBeam.git
   git clone https://git.astron.nl/RD/EveryBeam.git
   cd EveryBeam
   #   git checkout d75cfa914aa84c556467298237333c2308b592b5
   mkdir build
   cd build
   cmake -DBUILD_WITH_PYTHON=On ..
   make -j $J
   make install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


   # DP3
   cd $SRC
   #git clone -b v5.1 https://github.com/lofar-astron/DP3.git
   git clone https://github.com/lofar-astron/DP3.git
   cd DP3
   mkdir build
   cd build
   #   cmake .. -DCMAKE_PREFIX_PATH=/usr/local/idg
   cmake ..
   make -j $J
   make install

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo




   # losoto -- for selfcal
   pip install losoto

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


   # APLpy -- for selfcal
   pip install pyavm

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo



pip install imageio==2.14.1

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo
  
   pip install aplpy==2.1.0

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


   # wsclean latest -- for selfcal
   cd $SRC
   #   git clone -b v3.0 https://gitlab.com/aroffringa/wsclean.git
   git clone https://gitlab.com/aroffringa/wsclean.git
   cd wsclean
   mkdir -p build
   cd build
   #cmake .. -DCMAKE_PREFIX_PATH=/usr/local/idg
   cmake ..
   make -j $J
   make install

  # lotss-query
  cd $SRC
  git clone https://github.com/mhardcastle/lotss-query.git

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


  # lotss-hba-survey (not needed for most users)
  cd $SRC
  git clone https://github.com/mhardcastle/lotss-hba-survey.git

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


  # ddf-pipeline
  cd $SRC
  git clone https://github.com/mhardcastle/ddf-pipeline.git
  cd ddf-pipeline
  git checkout $BCH_DDFPIPE
  cd ..
  # create the init script
  ddf-pipeline/scripts/install.sh
  
  # git config --global --add safe.directory /usr/local/src/ddf-pipeline
  
  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


  cd /usr/local/src
  wget https://rclone.org/install.sh
  bash install.sh

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


  cd /usr/local/src
  git clone https://github.com/sara-nl/SpiderScripts.git
  cd SpiderScripts
  cp ada/ada /usr/local/bin

  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


  #pip list --format=columns
  pip list --format=columns



  pip cache purge
  #apt-get purge -y cmake
  apt-get -y autoremove
  rm -rf /var/lib/apt/lists/*
  rm -rf /root/.ssh
  bash -c "rm -rf /usr/local/src/{DP3,EveryBeam,LOFARBeam,aoflagger,dysco,idg,wsclean,PyBDSF,SpiderScripts}/" # DDFacet,killMS


  echo
  echo
  echo
  pip show numpy scipy
  echo
  echo
  echo


#  ln -s /usr/local/bin/DPPP /usr/local/bin/DP3

# %runscript
#   echo source $SRC/ddf-pipeline/init.sh >> $HOME/.bashrc    # not working
#   . $SRC/ddf-pipeline/init.sh                               # not working


# %startscript

# %startscript
# . /root/set-alias.sh
# #   alias ip=ipython3
#    eval ${@}